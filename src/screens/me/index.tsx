import Head from 'next/head'
import { useRouter } from 'next/router'
import { useQueryCache, useMutation } from 'react-query'
import { remove } from 'js-cookie'
import compareAsc from 'date-fns/compareAsc'
import { Button, Title, Text } from 'components'
import { useUser } from 'features/user/use-user'
import { logout } from 'shared/api'
import { releaseAdapter } from 'shared/utils'
import { routes, endpoints, cookies } from 'shared/constants'
import { ReleaseInList } from 'types/common'
import ReleasesGrid from './ReleasesGrid'

import styles from './styles.module.css'

function prepareData(
  releases: ReleaseInList[],
  type: 'films' | 'series' | 'games',
): {
  actual: ReleaseInList[]
  nonActual: ReleaseInList[]
} {
  let result = {
    actual: [],
    nonActual: [],
  }

  releases.forEach(release => {
    const adaptedRelease = releaseAdapter(release, type)

    if (compareAsc(new Date(), new Date(release.released)) <= 0) {
      result.actual.push(adaptedRelease)
    } else {
      result.nonActual.push(adaptedRelease)
    }
  })

  return result
}

function Me() {
  const { user } = useUser()
  const queryCache = useQueryCache()
  const { push } = useRouter()
  const [signOut] = useMutation(logout, {
    onSuccess: async () => {
      remove(cookies.AUTHORIZATION)
      queryCache.invalidateQueries(endpoints.PROFILE)
      push(routes.HOME)
    },
  })
  const {
    current_user: { email },
  } = user

  const expected = {
    films: user.expected.movies,
    series: user.expected.serials,
    games: user.expected.games,
  }

  const films = prepareData(expected.films, 'films')
  const games = prepareData(expected.games, 'games')
  const series = prepareData(expected.series, 'series')

  const hasActual =
    [...films.actual, ...games.actual, ...series.actual].length > 0
  const hasNonActual =
    [...films.nonActual, ...games.nonActual, ...series.nonActual].length > 0

  const noReleases = !hasActual && !hasNonActual

  return (
    <>
      <Head>
        <title>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</title>
      </Head>
      <Title>{email}</Title>
      <div className={styles.TgButtonWrapper}>
        <Button
          onClick={() => {
            const w = window as any
            w.open(user.current_user.telegram_auth_link, '_target')
            w.plausible('Click on tg bot in me')
          }}
        >
          <img width="24" height="24" src="/icons/telegram-blue.svg" alt="" />
          –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç
        </Button>
        <Text>
          –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ&nbsp;–≤—ã—Ö–æ–¥–µ —Ä–µ–ª–∏–∑–æ–≤,
          –∫–æ—Ç–æ—Ä—ã–µ –≤—ã&nbsp;–æ–∂–∏–¥–∞–µ—Ç–µ
        </Text>
      </div>
      {noReleases && (
        <Text>
          –°–µ–π—á–∞—Å —É&nbsp;–≤–∞—Å –Ω–µ—Ç –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ä–µ–ª–∏–∑–æ–≤. –ß—Ç–æ–±—ã –∏—Ö&nbsp;–¥–æ–±–∞–≤–∏—Ç—å,
          –Ω–∞–∂–º–∏—Ç–µ –Ω–∞&nbsp;–∫–Ω–æ–ø–∫—É —Å&nbsp;–æ–≥–Ω–µ–º –∏–ª–∏ —Å&nbsp;–∑–∞–∫–ª–∞–¥–∫–æ–π
          –≤&nbsp;–∫–∞—Ä—Ç–æ—á–∫–µ —Ä–µ–ª–∏–∑–∞. –í&nbsp;–¥–µ–Ω—å —Ä–µ–ª–∏–∑–∞ –≤—ã&nbsp;–ø–æ–ª—É—á–∏—Ç–µ
          –ø—É—à-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –ø–æ—ç—Ç–æ–º—É –Ω–µ&nbsp;–∑–∞–±—É–¥—å—Ç–µ –∏—Ö&nbsp;–≤–∫–ª—é—á–∏—Ç—å. –ï—Å–ª–∏ —Ä–µ–ª–∏–∑
          –µ—â–µ –Ω–µ&nbsp;–≤—ã—à–µ–ª, —Ç–æ&nbsp;–æ–Ω&nbsp;–ø–æ–ø–∞–¥–µ—Ç –≤&nbsp;—Å–µ–∫—Ü–∏—é
          &laquo;–û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–ª–∏–∑—ã&raquo;, –∞&nbsp;–µ—Å–ª–∏ —É–∂–µ –≤—ã—à–µ–ª,
          —Ç–æ&nbsp;–≤&nbsp;—Å–µ–∫—Ü–∏—é &laquo;–£–∂–µ –≤—ã—à–ª–æ&raquo;.
        </Text>
      )}
      <section className={styles.Section}>
        <Title h2>
          –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–ª–∏–∑—ã{' '}
          <img width="24" height="24" src="/icons/fire-on.svg" alt="" />
        </Title>
        {hasActual ? (
          <>
            <ReleasesGrid title="–ö–∏–Ω–æ" releases={films.actual} />
            <ReleasesGrid title="–°–µ—Ä–∏–∞–ª—ã" releases={series.actual} />
            <ReleasesGrid title="–ò–≥—Ä—ã" releases={games.actual} last />
          </>
        ) : (
          <Text>
            –ù–µ—Ç –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ä–µ–ª–∏–∑–æ–≤, —á—Ç–æ–±—ã –∏—Ö&nbsp;–¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞&nbsp;
            <span role="img" aria-label="fire">
              üî•
            </span>
            &nbsp;–≤&nbsp;–∫–∞—Ä—Ç–æ—á–∫–µ —Ä–µ–ª–∏–∑–∞
          </Text>
        )}
      </section>
      {hasNonActual && (
        <section className={styles.Section}>
          <Title h2>
            –ò–∑–±—Ä–∞–Ω–Ω–æ–µ{' '}
            <img width="24" height="24" src="/icons/star-on.svg" alt="" />
          </Title>
          <ReleasesGrid title="–ö–∏–Ω–æ" releases={films.nonActual} />
          <ReleasesGrid title="–°–µ—Ä–∏–∞–ª—ã" releases={series.nonActual} />
          <ReleasesGrid title="–ò–≥—Ä—ã" releases={games.nonActual} last />
        </section>
      )}
      <Button
        secondary
        onClick={() => {
          signOut()
        }}
      >
        –í—ã–π—Ç–∏
      </Button>
    </>
  )
}

export default Me
